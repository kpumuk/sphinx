# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run the gemspec command
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{sphinx}
  s.version = "0.9.10.2122"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Dmytro Shteflyuk"]
  s.date = %q{2009-12-04}
  s.description = %q{An easy interface to Sphinx standalone full-text search engine. It is implemented as plugin for Ruby on Rails, but can be easily used as standalone library.}
  s.email = %q{kpumuk@kpumuk.info}
  s.extra_rdoc_files = [
    "README.rdoc"
  ]
  s.files = [
    ".gitignore",
     "README.rdoc",
     "Rakefile",
     "VERSION.yml",
     "init.rb",
     "lib/sphinx.rb",
     "lib/sphinx/buffered_io.rb",
     "lib/sphinx/client.rb",
     "lib/sphinx/constants.rb",
     "lib/sphinx/indifferent_access.rb",
     "lib/sphinx/request.rb",
     "lib/sphinx/response.rb",
     "lib/sphinx/server.rb",
     "lib/sphinx/timeout.rb",
     "spec/client_response_spec.rb",
     "spec/client_spec.rb",
     "spec/client_validations_spec.rb",
     "spec/fixtures/default_search.php",
     "spec/fixtures/default_search_index.php",
     "spec/fixtures/excerpt_custom.php",
     "spec/fixtures/excerpt_default.php",
     "spec/fixtures/excerpt_flags.php",
     "spec/fixtures/field_weights.php",
     "spec/fixtures/filter.php",
     "spec/fixtures/filter_exclude.php",
     "spec/fixtures/filter_float_range.php",
     "spec/fixtures/filter_float_range_exclude.php",
     "spec/fixtures/filter_range.php",
     "spec/fixtures/filter_range_exclude.php",
     "spec/fixtures/filter_range_int64.php",
     "spec/fixtures/filter_ranges.php",
     "spec/fixtures/filters.php",
     "spec/fixtures/filters_different.php",
     "spec/fixtures/geo_anchor.php",
     "spec/fixtures/group_by_attr.php",
     "spec/fixtures/group_by_attrpair.php",
     "spec/fixtures/group_by_day.php",
     "spec/fixtures/group_by_day_sort.php",
     "spec/fixtures/group_by_month.php",
     "spec/fixtures/group_by_week.php",
     "spec/fixtures/group_by_year.php",
     "spec/fixtures/group_distinct.php",
     "spec/fixtures/id_range.php",
     "spec/fixtures/id_range64.php",
     "spec/fixtures/index_weights.php",
     "spec/fixtures/keywords.php",
     "spec/fixtures/limits.php",
     "spec/fixtures/limits_cutoff.php",
     "spec/fixtures/limits_max.php",
     "spec/fixtures/limits_max_cutoff.php",
     "spec/fixtures/match_all.php",
     "spec/fixtures/match_any.php",
     "spec/fixtures/match_boolean.php",
     "spec/fixtures/match_extended.php",
     "spec/fixtures/match_extended2.php",
     "spec/fixtures/match_fullscan.php",
     "spec/fixtures/match_phrase.php",
     "spec/fixtures/max_query_time.php",
     "spec/fixtures/miltiple_queries.php",
     "spec/fixtures/ranking_bm25.php",
     "spec/fixtures/ranking_fieldmask.php",
     "spec/fixtures/ranking_matchany.php",
     "spec/fixtures/ranking_none.php",
     "spec/fixtures/ranking_proximity.php",
     "spec/fixtures/ranking_proximity_bm25.php",
     "spec/fixtures/ranking_sph04.php",
     "spec/fixtures/ranking_wordcount.php",
     "spec/fixtures/retries.php",
     "spec/fixtures/retries_delay.php",
     "spec/fixtures/select.php",
     "spec/fixtures/set_override.php",
     "spec/fixtures/sort_attr_asc.php",
     "spec/fixtures/sort_attr_desc.php",
     "spec/fixtures/sort_expr.php",
     "spec/fixtures/sort_extended.php",
     "spec/fixtures/sort_relevance.php",
     "spec/fixtures/sort_time_segments.php",
     "spec/fixtures/sphinxapi.php",
     "spec/fixtures/update_attributes.php",
     "spec/fixtures/update_attributes_mva.php",
     "spec/fixtures/weights.php",
     "spec/spec_helper.rb",
     "spec/sphinx/sphinx-id64.conf",
     "spec/sphinx/sphinx.conf",
     "spec/sphinx/sphinx_test.sql",
     "sphinx.gemspec"
  ]
  s.homepage = %q{http://github.com/kpumuk/sphinx}
  s.rdoc_options = ["--charset=UTF-8"]
  s.require_paths = ["lib"]
  s.rubygems_version = %q{1.3.5}
  s.summary = %q{Sphinx Client API for Ruby}
  s.test_files = [
    "spec/client_response_spec.rb",
     "spec/client_spec.rb",
     "spec/client_validations_spec.rb",
     "spec/spec_helper.rb"
  ]

  if s.respond_to? :specification_version then
    current_version = Gem::Specification::CURRENT_SPECIFICATION_VERSION
    s.specification_version = 3

    if Gem::Version.new(Gem::RubyGemsVersion) >= Gem::Version.new('1.2.0') then
    else
    end
  else
  end
end

